{"filter":false,"title":"RegisterController.php","tooltip":"/app/Http/Controllers/Auth/RegisterController.php","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":51,"column":55},"end":{"row":51,"column":56},"action":"remove","lines":[","],"id":2},{"start":{"row":51,"column":54},"end":{"row":51,"column":55},"action":"remove","lines":["]"]},{"start":{"row":51,"column":53},"end":{"row":51,"column":54},"action":"remove","lines":["'"]},{"start":{"row":51,"column":52},"end":{"row":51,"column":53},"action":"remove","lines":["5"]},{"start":{"row":51,"column":51},"end":{"row":51,"column":52},"action":"remove","lines":["5"]},{"start":{"row":51,"column":50},"end":{"row":51,"column":51},"action":"remove","lines":["2"]},{"start":{"row":51,"column":49},"end":{"row":51,"column":50},"action":"remove","lines":[":"]},{"start":{"row":51,"column":48},"end":{"row":51,"column":49},"action":"remove","lines":["x"]},{"start":{"row":51,"column":47},"end":{"row":51,"column":48},"action":"remove","lines":["a"]},{"start":{"row":51,"column":46},"end":{"row":51,"column":47},"action":"remove","lines":["m"]},{"start":{"row":51,"column":45},"end":{"row":51,"column":46},"action":"remove","lines":["'"]},{"start":{"row":51,"column":44},"end":{"row":51,"column":45},"action":"remove","lines":[" "]},{"start":{"row":51,"column":43},"end":{"row":51,"column":44},"action":"remove","lines":[","]},{"start":{"row":51,"column":42},"end":{"row":51,"column":43},"action":"remove","lines":["'"]},{"start":{"row":51,"column":41},"end":{"row":51,"column":42},"action":"remove","lines":["g"]},{"start":{"row":51,"column":40},"end":{"row":51,"column":41},"action":"remove","lines":["n"]},{"start":{"row":51,"column":39},"end":{"row":51,"column":40},"action":"remove","lines":["i"]},{"start":{"row":51,"column":38},"end":{"row":51,"column":39},"action":"remove","lines":["r"]},{"start":{"row":51,"column":37},"end":{"row":51,"column":38},"action":"remove","lines":["t"]},{"start":{"row":51,"column":36},"end":{"row":51,"column":37},"action":"remove","lines":["s"]},{"start":{"row":51,"column":35},"end":{"row":51,"column":36},"action":"remove","lines":["'"]},{"start":{"row":51,"column":34},"end":{"row":51,"column":35},"action":"remove","lines":[" "]},{"start":{"row":51,"column":33},"end":{"row":51,"column":34},"action":"remove","lines":[","]},{"start":{"row":51,"column":32},"end":{"row":51,"column":33},"action":"remove","lines":["'"]},{"start":{"row":51,"column":31},"end":{"row":51,"column":32},"action":"remove","lines":["d"]},{"start":{"row":51,"column":30},"end":{"row":51,"column":31},"action":"remove","lines":["e"]},{"start":{"row":51,"column":29},"end":{"row":51,"column":30},"action":"remove","lines":["r"]},{"start":{"row":51,"column":28},"end":{"row":51,"column":29},"action":"remove","lines":["i"]},{"start":{"row":51,"column":27},"end":{"row":51,"column":28},"action":"remove","lines":["u"]},{"start":{"row":51,"column":26},"end":{"row":51,"column":27},"action":"remove","lines":["q"]},{"start":{"row":51,"column":25},"end":{"row":51,"column":26},"action":"remove","lines":["e"]},{"start":{"row":51,"column":24},"end":{"row":51,"column":25},"action":"remove","lines":["r"]},{"start":{"row":51,"column":23},"end":{"row":51,"column":24},"action":"remove","lines":["'"]},{"start":{"row":51,"column":22},"end":{"row":51,"column":23},"action":"remove","lines":["["]},{"start":{"row":51,"column":21},"end":{"row":51,"column":22},"action":"remove","lines":[" "]},{"start":{"row":51,"column":20},"end":{"row":51,"column":21},"action":"remove","lines":[">"]},{"start":{"row":51,"column":19},"end":{"row":51,"column":20},"action":"remove","lines":["="]},{"start":{"row":51,"column":18},"end":{"row":51,"column":19},"action":"remove","lines":[" "]},{"start":{"row":51,"column":17},"end":{"row":51,"column":18},"action":"remove","lines":["'"]},{"start":{"row":51,"column":16},"end":{"row":51,"column":17},"action":"remove","lines":["e"]},{"start":{"row":51,"column":15},"end":{"row":51,"column":16},"action":"remove","lines":["m"]},{"start":{"row":51,"column":14},"end":{"row":51,"column":15},"action":"remove","lines":["a"]},{"start":{"row":51,"column":13},"end":{"row":51,"column":14},"action":"remove","lines":["n"]}],[{"start":{"row":51,"column":12},"end":{"row":51,"column":13},"action":"remove","lines":["'"],"id":3},{"start":{"row":51,"column":8},"end":{"row":51,"column":12},"action":"remove","lines":["    "]},{"start":{"row":51,"column":4},"end":{"row":51,"column":8},"action":"remove","lines":["    "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":4},"action":"remove","lines":["    "]},{"start":{"row":50,"column":39},"end":{"row":51,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":71,"column":0},"action":"remove","lines":["<?php","","namespace App\\Http\\Controllers\\Auth;","","use App\\User;","use App\\Http\\Controllers\\Controller;","use Illuminate\\Support\\Facades\\Hash;","use Illuminate\\Support\\Facades\\Validator;","use Illuminate\\Foundation\\Auth\\RegistersUsers;","","class RegisterController extends Controller","{","    /*","    |--------------------------------------------------------------------------","    | Register Controller","    |--------------------------------------------------------------------------","    |","    | This controller handles the registration of new users as well as their","    | validation and creation. By default this controller uses a trait to","    | provide this functionality without requiring any additional code.","    |","    */","","    use RegistersUsers;","","    /**","     * Where to redirect users after registration.","     *","     * @var string","     */","    protected $redirectTo = '/home';","","    /**","     * Create a new controller instance.","     *","     * @return void","     */","    public function __construct()","    {","        $this->middleware('guest');","    }","","    /**","     * Get a validator for an incoming registration request.","     *","     * @param  array  $data","     * @return \\Illuminate\\Contracts\\Validation\\Validator","     */","    protected function validator(array $data)","    {","        return Validator::make($data, [","            'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],","            'password' => ['required', 'string', 'min:8', 'confirmed'],","        ]);","    }","","    /**","     * Create a new user instance after a valid registration.","     *","     * @param  array  $data","     * @return \\App\\User","     */","    protected function create(array $data)","    {","        return User::create([","            'name' => $data['name'],","            'email' => $data['email'],","            'password' => Hash::make($data['password']),","        ]);","    }","}",""],"id":4},{"start":{"row":0,"column":0},"end":{"row":61,"column":1},"action":"insert","lines":["<?php","namespace App\\Http\\Controllers\\Auth;","use App\\User;","use App\\Http\\Controllers\\Controller;","use Illuminate\\Support\\Facades\\Hash;","use Illuminate\\Support\\Facades\\Validator;","use Illuminate\\Foundation\\Auth\\RegistersUsers;","class RegisterController extends Controller","{","    /*","    |--------------------------------------------------------------------------","    | Register Controller","    |--------------------------------------------------------------------------","    |","    | This controller handles the registration of new users as well as their","    | validation and creation. By default this controller uses a trait to","    | provide this functionality without requiring any additional code.","    |","    */","    use RegistersUsers;","    /**","     * Where to redirect users after registration.","     *","     * @var string","     */","    protected $redirectTo = '/home';","    /**","     * Create a new controller instance.","     *","     * @return void","     */","    public function __construct()","    {","        $this->middleware('guest');","    }","    /**","     * Get a validator for an incoming registration request.","     *","     * @param  array  $data","     * @return \\Illuminate\\Contracts\\Validation\\Validator","     */","    protected function validator(array $data)","    {","        return Validator::make($data, [","            'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],","            'password' => ['required', 'string', 'min:8', 'confirmed'],","        ]);","    }","    /**","     * Create a new user instance after a valid registration.","     *","     * @param  array  $data","     * @return \\App\\User","     */","    protected function create(array $data)","    {","        return User::create([","            'email' => $data['email'],","            'password' => Hash::make($data['password']),","        ]);","    }","}"]}]]},"ace":{"folds":[],"scrolltop":721.9375,"scrollleft":0,"selection":{"start":{"row":61,"column":1},"end":{"row":61,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":51,"state":"php-doc-start","mode":"ace/mode/php"}},"timestamp":1557109041287,"hash":"4412312103822759854e43e9e1231de90ea13f74"}